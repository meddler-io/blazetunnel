import { InjectionToken } from '@angular/core';
export const HIGHLIGHT_OPTIONS = new InjectionToken('HIGHLIGHT_OPTIONS');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlnaGxpZ2h0Lm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWhpZ2hsaWdodGpzLyIsInNvdXJjZXMiOlsibGliL2hpZ2hsaWdodC5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBc0cvQyxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLGNBQWMsQ0FBbUIsbUJBQW1CLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSGlnaGxpZ2h0TGlicmFyeSB7XG5cbiAgLyoqXG4gICAqIENvcmUgaGlnaGxpZ2h0aW5nIGZ1bmN0aW9uLlxuICAgKiBAcGFyYW0gbmFtZSBBY2NlcHRzIGEgbGFuZ3VhZ2UgbmFtZSwgb3IgYW4gYWxpYXNcbiAgICogQHBhcmFtIHZhbHVlIEEgc3RyaW5nIHdpdGggdGhlIGNvZGUgdG8gaGlnaGxpZ2h0LlxuICAgKiBAcGFyYW0gaWdub3JlX2lsbGVnYWxzIFdoZW4gcHJlc2VudCBhbmQgZXZhbHVhdGVzIHRvIGEgdHJ1ZSB2YWx1ZSwgZm9yY2VzIGhpZ2hsaWdodGluZyB0byBmaW5pc2hcbiAgICogZXZlbiBpbiBjYXNlIG9mIGRldGVjdGluZyBpbGxlZ2FsIHN5bnRheCBmb3IgdGhlIGxhbmd1YWdlIGluc3RlYWQgb2YgdGhyb3dpbmcgYW4gZXhjZXB0aW9uLlxuICAgKiBAcGFyYW0gY29udGludWF0aW9uIEFuIG9wdGlvbmFsIG1vZGUgc3RhY2sgcmVwcmVzZW50aW5nIHVuZmluaXNoZWQgcGFyc2luZy5cbiAgICogV2hlbiBwcmVzZW50LCB0aGUgZnVuY3Rpb24gd2lsbCByZXN0YXJ0IHBhcnNpbmcgZnJvbSB0aGlzIHN0YXRlIGluc3RlYWQgb2YgaW5pdGlhbGl6aW5nIGEgbmV3IG9uZVxuICAgKi9cbiAgaGlnaGxpZ2h0KG5hbWU6IHN0cmluZywgdmFsdWU6IHN0cmluZywgaWdub3JlX2lsbGVnYWxzOiBib29sZWFuLCBjb250aW51YXRpb24/OiBhbnkpOiBIaWdobGlnaHRSZXN1bHQ7XG5cbiAgLyoqXG4gICAqIEhpZ2hsaWdodGluZyB3aXRoIGxhbmd1YWdlIGRldGVjdGlvbi5cbiAgICogQHBhcmFtIHZhbHVlIEFjY2VwdHMgYSBzdHJpbmcgd2l0aCB0aGUgY29kZSB0byBoaWdobGlnaHRcbiAgICogQHBhcmFtIGxhbmd1YWdlU3Vic2V0IEFuIG9wdGlvbmFsIGFycmF5IG9mIGxhbmd1YWdlIG5hbWVzIGFuZCBhbGlhc2VzIHJlc3RyaWN0aW5nIGRldGVjdGlvbiB0byBvbmx5IHRob3NlIGxhbmd1YWdlcy5cbiAgICogVGhlIHN1YnNldCBjYW4gYWxzbyBiZSBzZXQgd2l0aCBjb25maWd1cmUsIGJ1dCB0aGUgbG9jYWwgcGFyYW1ldGVyIG92ZXJyaWRlcyB0aGUgb3B0aW9uIGlmIHNldC5cbiAgICovXG4gIGhpZ2hsaWdodEF1dG8odmFsdWU6IHN0cmluZywgbGFuZ3VhZ2VTdWJzZXQ6IHN0cmluZ1tdKTogSGlnaGxpZ2h0UmVzdWx0O1xuXG4gIC8qKlxuICAgKiBQb3N0LXByb2Nlc3Npbmcgb2YgdGhlIGhpZ2hsaWdodGVkIG1hcmt1cC5cbiAgICogQ3VycmVudGx5IGNvbnNpc3RzIG9mIHJlcGxhY2luZyBpbmRlbnRhdGlvbiBUQUIgY2hhcmFjdGVycyBhbmQgdXNpbmcgPGJyPiB0YWdzIGluc3RlYWQgb2YgbmV3LWxpbmUgY2hhcmFjdGVycy5cbiAgICogT3B0aW9ucyBhcmUgc2V0IGdsb2JhbGx5IHdpdGggY29uZmlndXJlLlxuICAgKiBAcGFyYW0gdmFsdWUgQWNjZXB0cyBhIHN0cmluZyB3aXRoIHRoZSBoaWdobGlnaHRlZCBtYXJrdXBcbiAgICovXG4gIGZpeE1hcmt1cCh2YWx1ZTogc3RyaW5nKTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBcHBsaWVzIGhpZ2hsaWdodGluZyB0byBhIERPTSBub2RlIGNvbnRhaW5pbmcgY29kZS5cbiAgICogVGhlIGZ1bmN0aW9uIHVzZXMgbGFuZ3VhZ2UgZGV0ZWN0aW9uIGJ5IGRlZmF1bHQgYnV0IHlvdSBjYW4gc3BlY2lmeSB0aGUgbGFuZ3VhZ2UgaW4gdGhlIGNsYXNzIGF0dHJpYnV0ZSBvZiB0aGUgRE9NIG5vZGUuXG4gICAqIFNlZSB0aGUgY2xhc3MgcmVmZXJlbmNlIGZvciBhbGwgYXZhaWxhYmxlIGxhbmd1YWdlIG5hbWVzIGFuZCBhbGlhc2VzLlxuICAgKiBAcGFyYW0gYmxvY2sgVGhlIGVsZW1lbnQgdG8gYXBwbHkgaGlnaGxpZ2h0IG9uLlxuICAgKi9cbiAgaGlnaGxpZ2h0QmxvY2soYmxvY2s6IEhUTUxFbGVtZW50KTogdm9pZDtcblxuICAvKipcbiAgICogQ29uZmlndXJlcyBnbG9iYWwgb3B0aW9uczpcbiAgICogQHBhcmFtIGNvbmZpZyBIaWdobGlnaHRKcyBjb25maWd1cmF0aW9uIGFyZ3VtZW50XG4gICAqL1xuICBjb25maWd1cmUoY29uZmlnOiBIaWdobGlnaHRDb25maWcpOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBBcHBsaWVzIGhpZ2hsaWdodGluZyB0byBhbGwgPHByZT48Y29kZT4uLjwvY29kZT48L3ByZT4gYmxvY2tzIG9uIGEgcGFnZS5cbiAgICovXG4gIGluaXRIaWdobGlnaHRpbmcoKTogdm9pZDtcblxuICAvKipcbiAgICogQWRkcyBuZXcgbGFuZ3VhZ2UgdG8gdGhlIGxpYnJhcnkgdW5kZXIgdGhlIHNwZWNpZmllZCBuYW1lLiBVc2VkIG1vc3RseSBpbnRlcm5hbGx5LlxuICAgKiBAcGFyYW0gbmFtZSBBIHN0cmluZyB3aXRoIHRoZSBuYW1lIG9mIHRoZSBsYW5ndWFnZSBiZWluZyByZWdpc3RlcmVkXG4gICAqIEBwYXJhbSBsYW5ndWFnZSBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhbiBvYmplY3Qgd2hpY2ggcmVwcmVzZW50cyB0aGUgbGFuZ3VhZ2UgZGVmaW5pdGlvbi5cbiAgICogVGhlIGZ1bmN0aW9uIGlzIHBhc3NlZCB0aGUgaGxqcyBvYmplY3QgdG8gYmUgYWJsZSB0byB1c2UgY29tbW9uIHJlZ3VsYXIgZXhwcmVzc2lvbnMgZGVmaW5lZCB3aXRoaW4gaXQuXG4gICAqL1xuICByZWdpc3Rlckxhbmd1YWdlKG5hbWU6IHN0cmluZywgbGFuZ3VhZ2U6ICgpID0+IGFueSk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIEByZXR1cm4gVGhlIGxhbmd1YWdlcyBuYW1lcyBsaXN0LlxuICAgKi9cbiAgbGlzdExhbmd1YWdlcygpOiBzdHJpbmdbXTtcblxuICAvKipcbiAgICogTG9va3MgdXAgYSBsYW5ndWFnZSBieSBuYW1lIG9yIGFsaWFzLlxuICAgKiBAcGFyYW0gbmFtZSBMYW5ndWFnZSBuYW1lXG4gICAqIEByZXR1cm4gVGhlIGxhbmd1YWdlIG9iamVjdCBpZiBmb3VuZCwgdW5kZWZpbmVkIG90aGVyd2lzZS5cbiAgICovXG4gIGdldExhbmd1YWdlKG5hbWU6IHN0cmluZyk6IGFueTtcblxuICAvKipcbiAgICogQWRkIGxpbmUgbnVtYmVycyB0byBjb2RlIGVsZW1lbnRcbiAgICogQHBhcmFtIGVsIENvZGUgZWxlbWVudFxuICAgKi9cbiAgbGluZU51bWJlcnNCbG9jayhlbDogRWxlbWVudCk6IHZvaWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSGlnaGxpZ2h0Q29uZmlnIHtcbiAgLyoqIHRhYlJlcGxhY2U6IGEgc3RyaW5nIHVzZWQgdG8gcmVwbGFjZSBUQUIgY2hhcmFjdGVycyBpbiBpbmRlbnRhdGlvbi4gKi9cbiAgdGFiUmVwbGFjZT86IHN0cmluZztcbiAgLyoqIHVzZUJSOiBhIGZsYWcgdG8gZ2VuZXJhdGUgPGJyPiB0YWdzIGluc3RlYWQgb2YgbmV3LWxpbmUgY2hhcmFjdGVycyBpbiB0aGUgb3V0cHV0LCB1c2VmdWwgd2hlbiBjb2RlIGlzIG1hcmtlZCB1cCB1c2luZyBhIG5vbi08cHJlPiBjb250YWluZXIuICovXG4gIHVzZUJSPzogYm9vbGVhbjtcbiAgLyoqIGNsYXNzUHJlZml4OiBhIHN0cmluZyBwcmVmaXggYWRkZWQgYmVmb3JlIGNsYXNzIG5hbWVzIGluIHRoZSBnZW5lcmF0ZWQgbWFya3VwLCB1c2VkIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSB3aXRoIHN0eWxlc2hlZXRzLiAqL1xuICBjbGFzc1ByZWZpeD86IHN0cmluZztcbiAgLyoqIGxhbmd1YWdlczogYW4gYXJyYXkgb2YgbGFuZ3VhZ2UgbmFtZXMgYW5kIGFsaWFzZXMgcmVzdHJpY3RpbmcgYXV0byBkZXRlY3Rpb24gdG8gb25seSB0aGVzZSBsYW5ndWFnZXMuICovXG4gIGxhbmd1YWdlcz86IHN0cmluZ1tdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEhpZ2hsaWdodFJlc3VsdCB7XG4gIGxhbmd1YWdlPzogc3RyaW5nO1xuICBzZWNvbmRfYmVzdD86IGFueTtcbiAgdG9wPzogYW55O1xuICB2YWx1ZT86IHN0cmluZztcbiAgcmVsZXZhbmNlPzogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEhpZ2hsaWdodE9wdGlvbnMge1xuICBjb25maWc/OiBIaWdobGlnaHRDb25maWc7XG4gIGxhbmd1YWdlcz86IHsgW25hbWU6IHN0cmluZ106ICgpID0+IFByb21pc2U8YW55PiB9O1xuICBsaW5lTnVtYmVycz86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjb25zdCBISUdITElHSFRfT1BUSU9OUyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxIaWdobGlnaHRPcHRpb25zPignSElHSExJR0hUX09QVElPTlMnKTtcbiJdfQ==