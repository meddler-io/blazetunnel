# server {
#     listen 80;
#     server_name meddler.xyz;
#     server_tokens off;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     location / {
#         return 301 https://$host$request_uri;
#     }
# }
upstream blazeserver {
    server blazeserver:80;
}

upstream blazeserver_api {
    server blazeserver:8080;
}



server {
    listen 80 ;
    server_name _;
    # add_header Strict-Transport-Security "max-age=15768000; preload" always;
    return 301 https://$host$request_uri;


}


server {
    listen 443 ssl  http2;
    server_name blazetunnel.meddler.xyz localhost;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/blazetunnel.meddler.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/blazetunnel.meddler.xyz/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


    root /usr/share/nginx/html;


    location /api {
        proxy_pass http://blazeserver_api;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_intercept_errors on; # see http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_intercept_errors
    }


    location /download {
        root /var/www;
        # add_header Content-Disposition 'attachment; filename="request_basename"';
        try_files $uri $uri/ /index.html;

    }

    location / {
        try_files $uri $uri/ /index.html;
    }

}


server {
    listen 443 default ssl http2;
    server_name *.blazetunnel.meddler.xyz ;

    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/blazetunnel.meddler.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/blazetunnel.meddler.xyz/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


    root /usr/share/nginx/html;

    error_page 404 /error.html;
    error_page 502 /error.html;
    location = /error.html {
                root /usr/share/nginx/html;
                internal;
        }




    location /error.html {
        add_header Cache-Control "no-cache" always;
        internal;
    }




    location / {
        proxy_pass http://blazeserver;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_intercept_errors on; # see http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_intercept_errors
    }


}
