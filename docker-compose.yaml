version: "3"

services:
    server:
        build: .
        container_name: server
        env_file:
            - .env
        command: server --domain ${DOMAIN_NAME} -i 3600
        ports:
            - 80:80/tcp
            - 2723:2723/udp

        # volumes:
        # - ./:/go/src/github.com/rounak316/blazetunnel

    client:
        build: .
        container_name: client
        env_file:
            - .env
        command: client --tunnel ${SERVICE_NAME}.${DOMAIN_NAME}:2723 --local mockserver:8000 -i 3600

        # extra_hosts:
        # quick.server: 127.0.0.1
        # ports:
        # - 3001:3001/tcp
        # - 2723:2723/udp
        depends_on:
            - mockserver
        volumes:
            - ./:/go/src/github.com/rounak316/blazetunnel

    prodclient:
        build: https://github.com/rounak316/blazetunnel.git
        entrypoint: /bin/blazetunnel
        command: client --tunnel "${SERVICE_NAME}.${DOMAIN_NAME}:2723" --local "mockserver:8000" -i 3600
        env_file:
            - .env
        ports:
            - 3001:3001/tcp
            - 2723:2723/udp
        depends_on:
            - mockserver

    mockserver:
        image: opensecurity/mobile-security-framework-mobsf
        expose:
            - 8000

    blazeserver:
        build: https://github.com/rounak316/blazetunnel.git
        container_name: blazeserver
        env_file:
            - .env
        command: server --domain ${DOMAIN_NAME} -i 3600
        expose:
            - 443
            - 80

        ports:
            - 2723:2723/udp
    nginx:
        image: nginx:1.15-alpine
        restart: unless-stopped
        volumes:
            - ./nginx/data/nginx/app.conf:/etc/nginx/conf.d/app.conf
            - ./nginx/data/nginx/nginx.conf:/etc/nginx/nginx.conf

            - ./nginx/data/html:/usr/share/nginx/html

            - ./nginx/data/certbot/conf:/etc/letsencrypt
            - ./nginx/data/certbot/www:/var/www/certbot
        depends_on:
            - blazeserver
        ports:
            - "80:80"
            - "443:443"
        command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
